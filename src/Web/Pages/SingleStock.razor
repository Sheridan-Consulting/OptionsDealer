@page "/options/stock"
@using global::Shared.Models
@inject HttpClient Http

<PageTitle>Find Options by Single Symbol</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

<div><label> Enter a Stock Symbol: <input @bind="symbol" /></label><button @onclick="FindOptions">
                                                                     Search
                                                                 </button></div>
@if (!string.IsNullOrEmpty(symbol))
{
@if (stock == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Stock</th>
            <th>Mid Price</th>
            <th>Strike Price</th>
            <th>Expiration Date</th>
            <th>Open Interest</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var option in stock.Options)
        {
            <tr>
                <td>@option.Symbol</td>
                <td>$@option.Mid</td>
                <td>$@option.StrikePrice</td>
                <td>@option.ExpirationDate.ToString("MM/dd/yyyy")</td>
                <td>@option.OpenInterest</td>
            </tr>
        }
        </tbody>
    </table>
}
}
@code {
    private Stock? stock;
    private string symbol;

    protected override async Task OnInitializedAsync()
    {
        
    }

    private async  Task FindOptions()
    {
        stock = await Http.GetFromJsonAsync<Stock>($"api/options/bysymbol/{symbol}");
    }

}